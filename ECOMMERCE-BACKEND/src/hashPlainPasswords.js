console.log('üöÄ Script b·∫Øt ƒë·∫ßu...');

require('dotenv').config();
const mongoose = require('mongoose');
const bcrypt = require('bcrypt');
const User = require('./models/UserModel'); // ƒê∆∞·ªùng d·∫´n ƒë√∫ng v·ªõi c·∫•u tr√∫c th∆∞ m·ª•c c·ªßa b·∫°n

const MONGO_URI = process.env.MONGO_DB;

mongoose.connect(MONGO_URI)
  .then(async () => {
    console.log('‚úÖ ƒê√£ k·∫øt n·ªëi MongoDB');

    const users = await User.find();
    let fixed = 0;

    for (let user of users) {
      if (user.password && !user.password.startsWith('$2b$')) {
        user.password = bcrypt.hashSync(user.password, 10);
        await user.save();
        console.log(`üîí ƒê√£ m√£ h√≥a l·∫°i m·∫≠t kh·∫©u cho user: ${user.email}`);
        fixed++; 
      }
    }

    if (fixed === 0) {
      console.log('‚úÖ Kh√¥ng c√≥ user n√†o c·∫ßn m√£ h√≥a l·∫°i.');
    } else {
      console.log(`üéâ ƒê√£ m√£ h√≥a l·∫°i m·∫≠t kh·∫©u cho ${fixed} user.`);
    }

    await mongoose.disconnect();
    console.log('üîå ƒê√£ ng·∫Øt k·∫øt n·ªëi MongoDB');
  })
  .catch(err => {
    console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', err);
  });
